---

- name: Configure signing key for influxdb repository.
  apt_key:
    url: "https://repos.influxdata.com/influxdb.key"
    state: present

- name: Install influxdb apt repo.
  apt_repository:
    repo: "deb https://repos.influxdata.com/debian {{ ansible_distribution_release }} stable"
    state: "present"
    # Ansible will automatically add the ".list" suffix.
    filename: /etc/apt/sources.list.d/influxdb

- name: Configure signing key for grafana repository.
  apt_key:
    url: "https://packages.grafana.com/gpg.key"
    state: present

- name: Install grafana apt repo.
  apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: "present"
    # Ansible will automatically add the ".list" suffix.
    filename: /etc/apt/sources.list.d/grafana

- name: Configure signing key for telegraf repository.
  apt_key:
    url: "https://repos.influxdata.com/influxdb.key"
    state: present

- name: Install telegraf apt repo.
  apt_repository:
    repo: "deb https://repos.influxdata.com/debian {{ ansible_distribution_release }} stable"
    state: "present"
    # Ansible will automatically add the ".list" suffix.
    filename: /etc/apt/sources.list.d/telegraf

- name: install influxdb, telegraf, grafana
  apt:
    name:
        - grafana
        - influxdb
        - telegraf

- name: configuration telegraf.conf
  copy:
    dest: /etc/telegraf/telegraf.conf
    backup: yes
    content: |
        [global_tags]

        ###############################################################################
        #                                  GLOBAL                                     #
        ###############################################################################

        [agent]
            interval = "10s"
            debug = false
            hostname = "jitsi_host"
            round_interval = true
            flush_interval = "10s"
            flush_jitter = "0s"
            collection_jitter = "0s"
            metric_batch_size = 1000
            metric_buffer_limit = 10000
            quiet = false
            logfile = ""
            omit_hostname = false
  notify:
    - restart telegraf


- name: configure telegraf.d/jitsi.conf
  copy:
    dest: /etc/telegraf/telegraf.d/jitsi.conf
    content: |
        ###############################################################################
        #                                  INPUTS                                     #
        ###############################################################################

        [[inputs.http]]
            name_override = "jitsi_stats"
            urls = [
            "http://127.0.0.1:8080/colibri/stats"
            ]

            data_format = "json"

        ###############################################################################
        #                                  OUTPUTS                                    #
        ###############################################################################

        [[outputs.influxdb]]
            urls = ["http://localhost:8086"]
            database = "jitsi"
            timeout = "0s"
            retention_policy = ""
  notify:
    - restart telegraf

- name: configure statistic in videobridge (1)
  lineinfile:
    path: /etc/jitsi/videobridge/sip-communicator.properties
    regexp: '^org.jitsi.videobridge.ENABLE_STATISTICS='
    line: org.jitsi.videobridge.ENABLE_STATISTICS=true
  notify:
    - restart jitsi-videobridge2

- name: configure statistic in videobridge (2)
  lineinfile:
    path: /etc/jitsi/videobridge/sip-communicator.properties
    regexp: '^org.jitsi.videobridge.STATISTICS_TRANSPORT='
    line: org.jitsi.videobridge.STATISTICS_TRANSPORT=muc,colibri
  notify:
    - restart jitsi-videobridge2

- name: configure statistic in videobridge (3)
  lineinfile:
    path: /etc/jitsi/videobridge/config
    regexp: '^JVB_OPTS='
    line: 'JVB_OPTS="--apis=rest,xmpp"'
  notify:
    - restart jitsi-videobridge2


- name: change grafana default password
  lineinfile:
    path: /etc/grafana/grafana.ini
    insertafter: ';admin_password = .*'
    regexp: '^admin_password ='
    line: 'admin_password = {{ meet_user_password }}'
  notify:
    - restart grafana-server


- name: change grafana domain
  lineinfile:
    path: /etc/grafana/grafana.ini
    insertafter: ';domain = .*'
    regexp: '^domain ='
    line: 'domain = {{ meet_domain }}'
  notify:
    - restart grafana-server

- name: change grafana root url
  lineinfile:
    path: /etc/grafana/grafana.ini
    insertafter: ';root_url = .*'
    regexp: '^root_url ='
    line: 'root_url = %(protocol)s://%(domain)s:%(http_port)s/statistik/'
  notify:
    - restart grafana-server

- name: change grafana serve from sub path
  lineinfile:
    path: /etc/grafana/grafana.ini
    insertafter: ';serve_from_sub_path = .*'
    regexp: '^serve_from_sub_path ='
    line: 'serve_from_sub_path = true'
  notify:
    - restart grafana-server



- name: enable influxdb, telegraf, grafana-server
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - influxdb
    - grafana-server
    - telegraf


- name: configure nginx for grafana
  blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK for nginx grafana"
    path: /etc/nginx/sites-enabled/{{ meet_domain }}.conf
    insertbefore: "^[ ]+# websockets .*"
    block: |
        # Grafana
        location ^~ /statistik/ {
            proxy_pass http://localhost:3000/;
        }
  notify:
    - restart nginx